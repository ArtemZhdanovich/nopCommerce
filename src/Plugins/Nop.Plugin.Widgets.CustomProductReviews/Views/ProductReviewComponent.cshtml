@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Nop.Core.Infrastructure
@using Nop.Web.Framework.TagHelpers.Shared
@using Nop.Web.Framework.TagHelpers.Public
@using LabelTagHelper = Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper
@using TextAreaTagHelper = Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper
@using InputTagHelper = Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper
@model Nop.Web.Models.Catalog.ProductReviewsModel

@inject Nop.Services.Html.IHtmlFormatter htmlFormatter

@{
    Layout = "_ColumnsOne";
}
<link href="~/Plugins/Widgets.AdvancedProductReviews/Content/style.css" rel="stylesheet" />

@{
    var _storeContext = EngineContext.Current.Resolve<Nop.Core.IStoreContext>();
    var _settingService = EngineContext.Current.Resolve<Nop.Services.Configuration.ISettingService>();

    var setting = await _settingService.LoadSettingAsync<Nop.Plugin.Widgets.CustomProductReviews.CustomProductReviewsSettings>( _storeContext.GetCurrentStore().Id);
    if (setting == null)
    {
        setting = await _settingService.LoadSettingAsync<Nop.Plugin.Widgets.CustomProductReviews.CustomProductReviewsSettings>();
    }
}

<div class="page product-reviews-page">
    <div class="page-title">
    </div>
    <div class="page-body">
        test
        @if (Model.AddProductReview.SuccessfullyAdded)
        {
            <div class="result">
                @Model.AddProductReview.Result
            </div>
        }
        else if (!Model.AddProductReview.CanAddNewReview)
        {
            <div class="result review-already-added">
            </div>
        }
        else
        {
            <div class="write-review" id="review-form">
                <div class="title">
                </div>
                <form asp-route="ProductReviews" method="post">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="inputs">
                                <label asp-for="AddProductReview.Title" asp-postfix=":"></label>
                                <input asp-for="AddProductReview.Title" class="review-title" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)"/>
                                <nop-required/>
                                <span asp-validation-for="AddProductReview.Title"></span>
                            </div>
                            <div class="inputs">
                                <label asp-for="AddProductReview.ReviewText" asp-postfix=":"></label>
                                <textarea asp-for="AddProductReview.ReviewText" class="review-text" asp-disabled="@(!Model.AddProductReview.CanCurrentCustomerLeaveReview)"></textarea>
                                <nop-required/>
                                <span asp-validation-for="AddProductReview.ReviewText"></span>
                            </div>
                            <div class="inputs">
                                <label>Attach files</label>
                                <input type="file" id="photos" name="photos" multiple="multiple" onchange="readURLFileUpload()" />
                                Max file in upload: 5
                            </div>
                            <div class="review-rating">
                                <div class="name-description">
                                    <label asp-for="AddProductReview.Rating" asp-postfix=":"></label>
                                </div>
                                <div class="rating-wrapper">
                                    <div class="rating-options">
                                        <input asp-for="AddProductReview.Rating" value="0" type="radio" id="addproductrating_0" style="display: none;"/>
                                    </div>
                                </div>
                            </div>
                            @if (Model.ReviewTypeList.Count > 0)
                            {
                                foreach (var additionalReview in Model.AddAdditionalProductReviewList.OrderBy(ob => ob.DisplayOrder).ToList())
                                {
                                    var curAdditionalReview = Model.AddAdditionalProductReviewList.IndexOf(additionalReview);
                                    <div class="review-rating">
                                        <div class="name-description">
                                            <div class="tooltip">
                                                <label>@Html.Raw(additionalReview.Name):</label>
                                                <span class="tooltiptext">@Html.Raw(additionalReview.Description)</span>
                                            </div>
                                        </div>
                                        <div class="rating-wrapper">
                                            <div class="rating-options">
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].ReviewTypeId" value="@(additionalReview.ReviewTypeId)" type="hidden"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Name" value="@(additionalReview.Name)" type="hidden"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Description" value="@(additionalReview.Description)" type="hidden"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].DisplayOrder" value="@(additionalReview.DisplayOrder)" type="hidden"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].IsRequired" value="@(additionalReview.IsRequired)" type="hidden"/>

                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="0" type="radio" id="addproductratingext_0_@(additionalReview.ReviewTypeId)" style="display: none;"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="1" type="radio" id="addproductratingext_1_@(additionalReview.ReviewTypeId)"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="2" type="radio" id="addproductratingext_2_@(additionalReview.ReviewTypeId)"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="3" type="radio" id="addproductratingext_3_@(additionalReview.ReviewTypeId)"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="4" type="radio" id="addproductratingext_4_@(additionalReview.ReviewTypeId)"/>
                                                <input asp-for="@Model.AddAdditionalProductReviewList[curAdditionalReview].Rating" value="5" type="radio" id="addproductratingext_5_@(additionalReview.ReviewTypeId)"/>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }


                        </div>
                    </div>
                    <div class="buttons">
                        <button type="submit" name="add-review" class="button-1 write-product-review-button">ff</button>
                    </div>
                </form>
            </div>
        }

    </div>
</div>
<script asp-location="Footer">
    var uploadButton = document.getElementById('add-review-button');

    $('#formProductReviews').submit(function (e) {

        e.preventDefault();
        uploadButton.value = 'Submitting...';

        var form = $(this);
        if (!form.valid()) return false;
        if (!readURLFileUpload()) return false;

        var formData = new FormData(form[0]);

        $(".form-message").html("");
        $.ajax({
            url: "@Url.RouteUrl("Plugin.Widgets.AdvancedProductReviews.PublicAdvancedProductReviews.ProductReviewsAdd")",
            type: 'POST',
            beforeSend: function () {
                $('#formProductReviews .ajax-loader').css("visibility", "visible");
            },
            data: formData,
            dataType: 'json',
            processData: false,
            contentType: false,
            success: function (data) {
                var strmsg = "";
                uploadButton.value = "@T("Reviews.SubmitButton")";

                if (data.message.length > 0) {
                    strmsg += "<ul>";
                    for (var i = 0; i < data.message.length; i++) {
                        strmsg += "<li>" + data.message[i] + "</li>";
                    }
                    strmsg += "</ul>";

                    if (!data.success) {
                        $("#message-error-formProductReviews").html(strmsg);
                    }
                    else {
                        $("#message-success-formProductReviews").html(data.message);
                        $("#formProductReviews .formProductReviews-body").css("display", "none");
                        document.getElementById("formProductReviews").reset();
                    }
                    if (typeof grecaptcha != "undefined") {
                        grecaptcha.reset();
                    }
                    $('html, body').animate({ scrollTop: $("#message-success-formProductReviews").offset().top }, 'slow');
                    return false;
                }
            },
            complete: function () {
                $('#formProductReviews .ajax-loader').css("visibility", "hidden");
            }
        });
    });

    $(document).ready(function () {
        $('.product-review-links a,.product-no-reviews a').on('click', function (e) {
            e.preventDefault();
            $('html, body').animate({
                scrollTop: $("#review-form").offset().top
            }, 500);
        });
    });

    function readURLFileUpload() {
        var fileSelect = document.getElementById('photos'),
            supportedFileFormat = '.jpg,.jpeg,.png',
            files = fileSelect.files;

        if (files.length > @setting.MaximumFile) {
            alert('@T("Plugins.Widgets.AdvancedProductReviews.MaximumUploadedFile")');
            $("#photos").val("");
            return false;
        }

        for (var i = 0; i < files.length; i++) {
            var myfile = files[i],
                value = myfile.type.toLocaleLowerCase(),
                type = value.substr(value.lastIndexOf(".")).toString();

            if (supportedFileFormat.indexOf(type) == -1) {
                alert('@T("Plugins.Widgets.AdvancedProductReviews.AllowedExtension")');
                $("#photos").val("");
                return false;
            }
            if (myfile.size > 1000000 * @setting.MaximumSize) {
                alert('@T("Plugins.Widgets.AdvancedProductReviews.MaximumUploadedFileSize")');
                $("#photos").val("");
                return false;
            }
        }
        return true;
    }
</script>