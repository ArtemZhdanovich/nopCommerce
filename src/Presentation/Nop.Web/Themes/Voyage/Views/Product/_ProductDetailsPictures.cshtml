@model ProductDetailsModel
@using Nop.Core
@using Nop.Services.Configuration
@inject ISettingService settingService
@inject IStoreContext storeContext

@{
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib_npm/magnific-popup/jquery.magnific-popup.min.js");
    Html.AddCssFileParts("~/lib_npm/magnific-popup/magnific-popup.css");

    var isExtendedGallery = false;
    if ((await settingService.GetSettingByKeyAsync("VoyageThemeSettings.ProductPageLayout", "standard-gallery", storeContext.GetCurrentStoreAsync().Id, true)).Equals("extended-gallery"))
    {
        isExtendedGallery = true;
    }
}

<div class="gallery">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBeforePictures, additionalData = Model })
    <div class="picture">
        @if (Model.DefaultPictureZoomEnabled)
        {
            <a href="@Model.DefaultPictureModel.FullSizeImageUrl" title="@Model.DefaultPictureModel.Title" id="main-product-img-lightbox-anchor-@Model.Id" class="magnific-popup-zoom">
                <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" id="main-product-img-@Model.Id" />
            </a>
            @if (isExtendedGallery)
            {
                <script asp-location="Footer">
                    $(document).ready(function () {
                        $('a.magnific-popup-zoom').magnificPopup(
                            {
                                type: 'image',
                                removalDelay: 300,
                                gallery: {
                                    enabled: true,
                                    tPrev: '@T("Media.MagnificPopup.Previous")',
                                    tNext: '@T("Media.MagnificPopup.Next")',
                                    tCounter: '@T("Media.MagnificPopup.Counter")'
                                },
                                tClose: '@T("Media.MagnificPopup.Close")',
                                tLoading: '@T("Media.MagnificPopup.Loading")'
                            });
                    });
                </script>
            }
            else
            {
                <script asp-location="Footer">
                    $(document).ready(function () {
                        $('#main-product-img-lightbox-anchor-@Model.Id').magnificPopup(
                            {
                                type: 'image',
                                removalDelay: 300,
                                gallery: {
                                    enabled: true,
                                    tPrev: '@T("Media.MagnificPopup.Previous")',
                                    tNext: '@T("Media.MagnificPopup.Next")',
                                    tCounter: '@T("Media.MagnificPopup.Counter")'
                                },
                                tClose: '@T("Media.MagnificPopup.Close")',
                                tLoading: '@T("Media.MagnificPopup.Loading")'
                            });
                    });
                </script>
            }
        }
        else
        {
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" id="main-product-img-@Model.Id" />
        }
    </div>
    @if (Model.PictureModels.Count > 1)
    {
        IList<PictureModel> pictureModels;
        if (isExtendedGallery)
        {
            pictureModels = Model.PictureModels.Skip(1).ToList();

            @foreach (var picture in pictureModels)
            {
                @if (Model.DefaultPictureZoomEnabled && isExtendedGallery)
                {
                    <div class="thumb-item">
                        <a href="@picture.FullSizeImageUrl" title="@picture.Title" class="magnific-popup-zoom">
                            <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title" />
                        </a>
                    </div>
                }
                else
                {
                    <div class="thumb-item">
                        <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title" data-defaultsize="@picture.ImageUrl" data-fullsize="@picture.FullSizeImageUrl" />
                    </div>
                }
            }
        }
        else
        {
            pictureModels = Model.PictureModels;

            <div class="picture-thumbs">
                @foreach (var picture in pictureModels)
                {
                    @if (Model.DefaultPictureZoomEnabled && isExtendedGallery)
                    {
                        <div class="thumb-item">
                            <a href="@picture.FullSizeImageUrl" title="@picture.Title" class="magnific-popup-zoom">
                                <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title" />
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="thumb-item">
                            <img src="@picture.ThumbImageUrl" alt="@picture.AlternateText" title="@picture.Title" data-defaultsize="@picture.ImageUrl" data-fullsize="@picture.FullSizeImageUrl" />
                        </div>
                    }
                }
            </div>
            <script asp-location="Footer">
                $(document).ready(function () {
                    $('.thumb-item img').on('click', function () {
                        $('#main-product-img-@Model.Id').attr('src', $(this).attr('data-defaultsize'));
                        $('#main-product-img-@Model.Id').attr('title', $(this).attr('title'));
                        $('#main-product-img-@Model.Id').attr('alt', $(this).attr('alt'));
                        $('#main-product-img-lightbox-anchor-@Model.Id').attr('href', $(this).attr('data-fullsize'));
                        $('#main-product-img-lightbox-anchor-@Model.Id').attr('title', $(this).attr('title'));
                    });
                });
            </script>
        }
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAfterPictures, additionalData = Model })
</div>