@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject IDateTimeHelper dateTimeHelper
@inject IPermissionService permissionService
@inject ICustomerService customerService
@inject IEventPublisher eventPublisher
@inject CommonSettings commonSettings
@inject LocalizationSettings localizationSettings
@inject StoreInformationSettings storeInformationSettings
@inject Nop.Services.Common.IGenericAttributeService genericAttributeService
@inject Nop.Services.Localization.ILanguageService languageService
@using System.Globalization
@using Nop.Core.Domain.Customers
@using Nop.Web.Framework.UI;
@using Nop.Core.Domain
@using Nop.Core.Domain.Localization
@using Nop.Services.Customers
@using Nop.Services.Helpers
@using Nop.Services.Security;

@{
    var returnUrl = webHelper.GetRawUrl(Context.Request);


    var kendoVersion = "2019.2.619";
    var jQueryUI = "1.10.3";

    var supportRtl = workContext.WorkingLanguage.Rtl && !localizationSettings.IgnoreRtlPropertyForAdminArea;

    //CSS resources
    if (supportRtl)
    {
        Html.AppendCssFileParts("~/css/admin/styles.rtl.css");
        Html.AppendCssFileParts("~/lib/adminlte3/css/AdminLTE.rtl.css");
        Html.AppendCssFileParts("~/lib/bootstrap/css/bootstrap.rtl.css");
    }
    else
    {
        Html.AppendCssFileParts("~/css/admin/styles.css");
        Html.AppendCssFileParts("~/lib/adminlte3/css/AdminLTE.min.css");
        Html.AppendCssFileParts("~/lib/bootstrap-4.4.1/css/bootstrap.min.css");
    }
    
    
    

    Html.AppendScriptParts($"~/lib/datatables/buttons.bootstrap.min.js");
    Html.AppendCssFileParts($"~/lib/datatables/buttons.dataTables.min.css");
    Html.AppendCssFileParts($"~/lib/datatables-bs4/css/dataTables.bootstrap4.css");
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.rtl.min.css");
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.default.min.css");
    Html.AppendCssFileParts($"~/lib/kendo/{kendoVersion}/kendo.common.min.css");
    Html.AppendCssFileParts($"~/lib/jquery-ui/jquery-ui-{jQueryUI}/jquery-ui-themes/smoothness/jquery-ui-{jQueryUI}.custom.min.css");
    Html.AppendCssFileParts("~/lib/fontAwesome/css/font-awesome.min.css");
    Html.AppendCssFileParts("~/lib/typeahead/typeahead.css");
    Html.AppendCssFileParts("~/lib/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css");


    //scripts
    Html.AppendScriptParts($"~/lib/datatables/buttons.bootstrap.min.js");
    Html.AppendScriptParts($"~/lib/datatables-buttons/js/dataTables.buttons.min.js");
    Html.AppendScriptParts($"~/lib/datatables/moment-with-locales-2.22.2.min.js");   
    Html.AppendScriptParts($"~/lib/datatables-bs4/js/dataTables.bootstrap4.min.js");
    Html.AppendScriptParts($"~/lib/datatables-bs4/js/jquery.dataTables.min.js");
    Html.AppendScriptParts($"~/lib/kendo/{kendoVersion}/kendo.ui.core.min.js");
    

    Html.AppendScriptParts("~/js/admin.search.js");
    Html.AppendScriptParts("~/js/admin.navigation.js");
    Html.AppendScriptParts("~/js/admin.common.js");
    Html.AppendScriptParts("~/lib/typeahead/typeahead.bundle.min.js");
    Html.AppendScriptParts("~/lib/jquery-migrate/jquery-migrate-3.1.0.min.js");
    Html.AppendScriptParts($"~/lib/jquery-ui/jquery-ui-{jQueryUI}/jquery-ui-{jQueryUI}.custom.min.js");
    Html.AppendScriptParts("~/lib/jquery-validate/jquery.validate.unobtrusive-v3.2.11/jquery.validate.unobtrusive.min.js");
    Html.AppendScriptParts("~/lib/jquery-validate/jquery.validate-v1.19.1/jquery.validate.min.js");
    Html.AppendScriptParts("~/lib/moment/moment.min.js");
    Html.AppendScriptParts("~/lib/bootstrap4/js/bootstrap.bundle.min.js");
    Html.AppendScriptParts("~/lib/adminlte3/js/adminlte.min.js");
    Html.AppendScriptParts("~/lib/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js");
    Html.AppendScriptParts("~/lib/jquery/jquery-3.4.1.min.js");



    //page title
    string adminPageTitle = !string.IsNullOrWhiteSpace(ViewBag.PageTitle) ? ViewBag.PageTitle + " / " : "";
    adminPageTitle += T("Admin.PageTitle").Text;

    //has "Manage Maintenance" permission?
    var canManageMaintenance = permissionService.Authorize(StandardPermissionProvider.ManageMaintenance);

    //X-UA-Compatible tag
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts($"<meta http-equiv=\"X-UA-Compatible\" content=\"{commonSettings.XuaCompatibleValue}\"/>");
    }

    //avatar
    var currentCustomer = workContext.CurrentCustomer;
    
    //event
    eventPublisher.Publish(new PageRenderingEvent(this.Html));

    //info: we specify "Admin" area for actions and widgets here for cases when we use this layout in a plugin that is running in a different area than "admin"
}
<!DOCTYPE html>
<html lang="@languageService.GetTwoLetterIsoLanguageName(workContext.WorkingLanguage)" @(supportRtl ? Html.Raw(" dir=\"rtl\"") : null)>
<head>
    <title>@adminPageTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    @*Google Font*@
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
    <script>
            var rootAppPath = '@(Url.Content("~/"))';
    </script>
    @Html.NopHeadCustom()
    @Html.NopCssFiles(ResourceLocation.Head, false)
    @Html.NopScripts(ResourceLocation.Head, false)
    @*Insert favicon and app icons head code*@
    @await Component.InvokeAsync("Favicon")
</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="throbber">
        <div class="curtain">
        </div>
        <div class="curtain-content">
            <div>
                <h1 class="throbber-header">@T("Common.Wait...")</h1>
                <p>
                    <img src="@Url.Content("~/css/admin/images/throbber-synchronizing.gif")" alt="" />
                </p>
            </div>
        </div>
    </div>
    <div id="ajaxBusy">
        <span>&nbsp;</span>
    </div>
    <div class="wrapper">
        @if (IsSectionDefined("header"))
        {
            @RenderSection("header")
        }
        else
        {
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderBefore })
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#"><i class="fa fa-bars"></i></a>
                </li>
            </ul>           

            @*<div class="navbar navbar-static-top" role="navigation">*@
                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderToggleAfter })
                @*<div class="navbar-custom-menu">*@
                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderNavbarBefore })
                    
        <ul class="navbar-nav ml-auto">

            <li class="nav-item">
                @await Component.InvokeAsync("AdminLanguageSelector")
            </li>
            @if (currentCustomer.IsRegistered())
            {                
                <li class="nav-item">
                    <a asp-controller="Customer" asp-action="Logout" asp-area="" class="nav-link">@T("Admin.Header.Logout")</a>
                </li>
            }
            <li class="nav-item">
                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderMiddle })
            </li>
            <li class="nav-item">
                <a asp-controller="Home" asp-action="Index" asp-area="" class="nav-link">@T("Admin.Header.PublicStore")</a>
            </li>
            @if (canManageMaintenance)
            {
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" data-toggle="dropdown">
                        <i class="fa fa-gears"></i>
                    </a>
                    <ul class="maintenance-menu dropdown-menu dropdown-menu-right" role="menu">
                        <li class="dropdown-item">
                            <form asp-controller="Common" asp-action="ClearCache" asp-area="@AreaNames.Admin">
                                <input name="returnurl" type="hidden" value="@returnUrl">
                                <div class="input-group-append">
                                    <button type="submit" style="width:210px;background-color: Transparent;">
                                        <span>@T("Admin.Header.ClearCache")</span>
                                    </button>
                                </div>
                            </form>
                        </li>
                        <li class="dropdown-item">
                            <form asp-controller="Common" asp-action="RestartApplication" asp-area="@AreaNames.Admin">
                                <input name="returnurl" type="hidden" value="@returnUrl">
                                <button id="restart-application" type="submit" style="width:210px;background-color: Transparent;">
                                    <span>@T("Admin.Header.RestartApplication")</span>
                                </button>
                                <script>
                                    $(document).ready(function () {
                                        $("#restart-application").click(function (e) {
                                            showThrobber('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Admin.Header.RestartApplication.Progress").Text))');
                                        });
                                    });
                                </script>
                            </form>
                        </li>
                    </ul>
                </li>
            }
        </ul>
                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderNavbarAfter })
                @*</div>
            </div>*@
        </nav>

            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.HeaderAfter })
        }
        @if (IsSectionDefined("headermenu"))
        {
            @RenderSection("headermenu")
        }
        else
        {
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="@Url.Content("~/Admin")" class="brand-link">
                <img src="~/css/admin/images/logo-mini.png" alt="logo.png" class="brand-image img-circle" > 
                <span class="logo-xl"></span>
                <span class="brand-text font-weight-normal">Your Store</span>
            </a>
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    @*<div class="image">
                        <img src="dist/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
                    </div>*@                    
                    <div class="info">                                                      
                        <a href="#" class="d-block"> @customerService.GetCustomerFullName(currentCustomer)</a>                                                                                     
                    </div>
                    </div>

               
                <nav class="mt-2">
                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.SearchBoxBefore })
                    <div class="sidebar-form">
                        <div id="search-box">
                            <input type="text" class="form-control admin-search-box typeahead" placeholder="@T("Admin.Menu.Search")">
                        </div>
                    </div>
                    <script>
                        $(document).ready(function () {
                            Admin.Search.init();
                        });
                    </script>
                    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.MenuBefore })
                    @await Html.PartialAsync("Menu")

                </nav>
            </div>
        </aside>
        }
        <div class="content-wrapper">
            @await Html.PartialAsync("Notifications")
            <div>
                @RenderBody()
            </div>
        </div>
        <div class="main-footer clearfix">
            @if (!storeInformationSettings.HidePoweredByNopCommerce)
            {
                @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
            Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                <div class="pull-left">
                    Powered by <a href="https://www.nopcommerce.com/?utm_source=admin-panel&utm_medium=footer&utm_campaign=admin-panel" target="_blank">nopCommerce</a>
                </div>
            }
            <div class="pull-right hidden-xs">
                <b>nopCommerce version @NopVersion.CurrentVersion</b>
            </div>
            <div class="text-center">
                @{
                    var currentCulture = new CultureInfo(workContext.WorkingLanguage.LanguageCulture);
                }
                @dateTimeHelper.ConvertToUserTime(DateTime.Now).ToString("f", currentCulture)
            </div>
        </div>
    </div>
    <script>
        var AdminLTEOptions = {
            boxWidgetOptions: {
                boxWidgetIcons: {
                    collapse: 'fa-minus',
                    open: 'fa-plus'
                }
            }
        };
    </script>
    @{
        //scroll to a selected panel (if specified)
        var selectedPanelName = this.Html.GetSelectedPanelName();
        if (!String.IsNullOrEmpty(selectedPanelName))
        {
            <script>
                    location.hash = '#@(selectedPanelName)';
            </script>
        }
    }
    @Html.NopCssFiles(ResourceLocation.Footer)
    @Html.NopScripts(ResourceLocation.Footer)
    <a id="backTop" class="btn btn-back-top bg-teal"></a>
    <script>
        $(document).ready(function () {
            //enable "back top" arrow
            $('#backTop').backTop();

            //enable tooltips
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
</body>
</html>